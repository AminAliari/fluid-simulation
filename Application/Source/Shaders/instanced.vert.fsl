#include "resources.h.fsl"

STRUCT(VSInput)
{
    DATA(float3, Position, POSITION);
    DATA(float3, Normal,   NORMAL);
};

STRUCT(VSOutput)
{
    DATA(float4, Position, SV_Position);
    DATA(float4, Color,    COLOR);
};

VSOutput VS_MAIN(VSInput In, SV_InstanceID(uint) InstanceID)
{
    INIT_MAIN;
    VSOutput Out;

    float4x4 tempMat = mul(Get(vp), Get(plane_toWorld)[InstanceID]);

    Out.Position = mul(tempMat, float4(In.Position, 1.0f));

    float4 normal = normalize(mul(Get(plane_toWorld)[InstanceID], float4(In.Normal.xyz, 1.0f)));

    float3 baseColor = Get(plane_color)[InstanceID].xyz;
    float3 diffuse = baseColor * max(dot(normal.xyz, -Get(lightDir)), 0.0);

    float3 ambientCoeff = float3(0.42, 0.478, 0.627);
    float3 ambient = baseColor * ambientCoeff;

    Out.Color = float4(diffuse + ambient, 1.0);
    RETURN(Out);
}
