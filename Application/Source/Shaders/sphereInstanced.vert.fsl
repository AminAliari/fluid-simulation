#include "resources.h.fsl"

STRUCT(VSInput)
{
    DATA(float3, Position, POSITION);
    DATA(float3, Normal,   NORMAL);
};

STRUCT(VSOutput)
{
    DATA(float4, Position, SV_Position);
    DATA(float4, Color,    COLOR);
};

#define MAX_VELOCITY 50.0

VSOutput VS_MAIN(VSInput In, SV_InstanceID(uint) InstanceID)
{
    INIT_MAIN;
    VSOutput Out;

    float sphereDim = Get(particleSize);
    ParticleData particle = Get(particleBuffer)[InstanceID];

    float3 localPos = In.Position.xyz * sphereDim;
    float3 worldPos = localPos + particle.pos.xyz;
    Out.Position = mul(Get(vp), float4(worldPos, 1.0f));


    float velocity = length(particle.vel.xyz)/MAX_VELOCITY;
    float3 baseColor = float3(velocity, velocity, 1.0 - velocity);

    Out.Color = float4(baseColor.rgb, 1.0);
    RETURN(Out);
}
